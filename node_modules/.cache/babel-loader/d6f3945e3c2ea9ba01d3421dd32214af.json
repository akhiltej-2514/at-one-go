{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\ggg\\\\distance-matrix-routing-with-tom-tom-api-main\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useEffect, useState } from 'react';\nimport * as tt from '@tomtom-international/web-sdk-maps';\nimport * as ttapi from '@tomtom-international/web-sdk-services';\nimport './App.css';\nimport '@tomtom-international/web-sdk-maps/dist/maps.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const mapElement = useRef();\n  const [map, setMap] = useState({});\n  const [longitude, setLongitude] = useState(-0.112869);\n  const [latitude, setLatitude] = useState(51.504);\n\n  const convertToPoints = lngLat => {\n    return {\n      point: {\n        latitude: lngLat.lat,\n        longitude: lngLat.lng\n      }\n    };\n  };\n\n  const drawRoute = (geoJson, map) => {\n    if (map.getLayer('route')) {\n      map.removeLayer('route');\n      map.removeSource('route');\n    }\n\n    map.addLayer({\n      id: 'route',\n      type: 'line',\n      source: {\n        type: 'geojson',\n        data: geoJson\n      },\n      paint: {\n        'line-color': '#4a90e2',\n        'line-width': 6\n      }\n    });\n  };\n\n  const addDeliveryMarker = (lngLat, map) => {\n    const element = document.createElement('div');\n    element.className = 'marker-delivery';\n    new tt.Marker({\n      element: element\n    }).setLngLat(lngLat).addTo(map);\n  };\n\n  useEffect(() => {\n    const origin = {\n      lng: longitude,\n      lat: latitude\n    };\n    const destinations = [];\n    let map = tt.map({\n      key: \"RKqZoufGP8qNritQfUA4AZDr3lM7GTCR\",\n      container: mapElement.current,\n      stylesVisibility: {\n        trafficIncidents: true,\n        trafficFlow: true\n      },\n      center: [longitude, latitude],\n      zoom: 14\n    });\n    setMap(map);\n\n    const addMarker = () => {\n      const popupOffset = {\n        bottom: [0, -25]\n      };\n      const popup = new tt.Popup({\n        offset: popupOffset\n      }).setHTML('This is you!');\n      const element = document.createElement('div');\n      element.className = 'marker';\n      const marker = new tt.Marker({\n        draggable: true,\n        element: element\n      }).setLngLat([longitude, latitude]).addTo(map);\n      marker.on('dragend', () => {\n        const lngLat = marker.getLngLat();\n        setLongitude(lngLat.lng);\n        setLatitude(lngLat.lat);\n      });\n      marker.setPopup(popup).togglePopup();\n    };\n\n    addMarker();\n\n    const sortDestinations = locations => {\n      const pointsForDestinations = locations.map(destination => {\n        return convertToPoints(destination);\n      });\n      const callParameters = {\n        key: \"RKqZoufGP8qNritQfUA4AZDr3lM7GTCR\",\n        destinations: pointsForDestinations,\n        origins: [convertToPoints(origin)]\n      };\n      return new Promise((resolve, reject) => {\n        ttapi.services.matrixRouting(callParameters).then(matrixAPIResults => {\n          const results = matrixAPIResults.matrix[0];\n          const resultsArray = results.map((result, index) => {\n            return {\n              location: locations[index],\n              drivingtime: result.response.routeSummary.travelTimeInSeconds\n            };\n          });\n          resultsArray.sort((a, b) => {\n            return a.drivingtime - b.drivingtime;\n          });\n          const sortedLocations = resultsArray.map(result => {\n            return result.location;\n          });\n          resolve(sortedLocations);\n        });\n      });\n    };\n\n    const recalculateRoutes = () => {\n      sortDestinations(destinations).then(sorted => {\n        sorted.unshift(origin);\n        ttapi.services.calculateRoute({\n          key: \"RKqZoufGP8qNritQfUA4AZDr3lM7GTCR\",\n          locations: sorted\n        }).then(routeData => {\n          const geoJson = routeData.toGeoJson();\n          drawRoute(geoJson, map);\n        });\n      });\n    };\n\n    map.on('click', e => {\n      destinations.push(e.lngLat);\n      addDeliveryMarker(e.lngLat, map);\n      recalculateRoutes();\n    });\n    return () => map.remove();\n  }, [longitude, latitude]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: map && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        ref: mapElement,\n        className: \"map\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-bar\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Where to?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"longitude\",\n          className: \"longitude\",\n          placeholder: \"Put in Longitude\",\n          onChange: e => {\n            setLongitude(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"latitude\",\n          className: \"latitude\",\n          placeholder: \"Put in latitude\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(App, \"xrUwu+KuQCzM+mWKGLR55/KzFHY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useRef","useEffect","useState","tt","ttapi","App","mapElement","map","setMap","longitude","setLongitude","latitude","setLatitude","convertToPoints","lngLat","point","lat","lng","drawRoute","geoJson","getLayer","removeLayer","removeSource","addLayer","id","type","source","data","paint","addDeliveryMarker","element","document","createElement","className","Marker","setLngLat","addTo","origin","destinations","key","container","current","stylesVisibility","trafficIncidents","trafficFlow","center","zoom","addMarker","popupOffset","bottom","popup","Popup","offset","setHTML","marker","draggable","on","getLngLat","setPopup","togglePopup","sortDestinations","locations","pointsForDestinations","destination","callParameters","origins","Promise","resolve","reject","services","matrixRouting","then","matrixAPIResults","results","matrix","resultsArray","result","index","location","drivingtime","response","routeSummary","travelTimeInSeconds","sort","a","b","sortedLocations","recalculateRoutes","sorted","unshift","calculateRoute","routeData","toGeoJson","e","push","remove","target","value"],"sources":["C:/Users/hp/Desktop/ggg/distance-matrix-routing-with-tom-tom-api-main/src/App.js"],"sourcesContent":["import { useRef, useEffect, useState } from 'react'\nimport * as tt from '@tomtom-international/web-sdk-maps'\nimport * as ttapi from '@tomtom-international/web-sdk-services'\nimport './App.css'\nimport '@tomtom-international/web-sdk-maps/dist/maps.css'\n\nconst App = () => {\n  const mapElement = useRef()\n  const [map, setMap] = useState({})\n  const [longitude, setLongitude] = useState(-0.112869)\n  const [latitude, setLatitude] = useState(51.504)\n\n  const convertToPoints = (lngLat) => {\n    return {\n      point: {\n        latitude: lngLat.lat,\n        longitude: lngLat.lng\n      }\n    }\n  }\n\n  const drawRoute = (geoJson, map) => {\n    if (map.getLayer('route')) {\n      map.removeLayer('route')\n      map.removeSource('route')\n    }\n    map.addLayer({\n      id: 'route',\n      type: 'line',\n      source: {\n        type: 'geojson',\n        data: geoJson\n      },\n      paint: {\n        'line-color': '#4a90e2',\n        'line-width': 6\n  \n      }\n    })\n  }\n\n  const addDeliveryMarker = (lngLat, map) => {\n    const element = document.createElement('div')\n    element.className = 'marker-delivery'\n    new tt.Marker({\n      element: element\n    })\n    .setLngLat(lngLat)\n    .addTo(map)\n  }\n\n  useEffect(() => {\n    const origin = {\n      lng: longitude,\n      lat: latitude,\n    }\n    const destinations = []\n\n    let map = tt.map({\n      key: \"RKqZoufGP8qNritQfUA4AZDr3lM7GTCR\",\n      container: mapElement.current,\n      stylesVisibility: {\n        trafficIncidents: true,\n        trafficFlow: true,\n      },\n      center: [longitude, latitude],\n      zoom: 14,\n    })\n    setMap(map)\n\n    const addMarker = () => {\n      const popupOffset = {\n        bottom: [0, -25]\n      }\n      const popup = new tt.Popup({ offset: popupOffset }).setHTML('This is you!')\n      const element = document.createElement('div')\n      element.className = 'marker'\n\n      const marker = new tt.Marker({\n        draggable: true,\n        element: element,\n      })\n        .setLngLat([longitude, latitude])\n        .addTo(map)\n      \n      marker.on('dragend', () => {\n        const lngLat = marker.getLngLat()\n        setLongitude(lngLat.lng)\n        setLatitude(lngLat.lat)\n      })\n\n      marker.setPopup(popup).togglePopup()\n      \n    }\n    addMarker()\n\n    const sortDestinations = (locations) => {\n      const pointsForDestinations = locations.map((destination) => {\n        return convertToPoints(destination)\n      })\n      const callParameters = {\n        key:\"RKqZoufGP8qNritQfUA4AZDr3lM7GTCR\",\n        destinations: pointsForDestinations,\n        origins: [convertToPoints(origin)],\n      }\n\n    return new Promise((resolve, reject) => {\n      ttapi.services\n        .matrixRouting(callParameters)\n        .then((matrixAPIResults) => {\n          const results = matrixAPIResults.matrix[0]\n          const resultsArray = results.map((result, index) => {\n            return {\n              location: locations[index],\n              drivingtime: result.response.routeSummary.travelTimeInSeconds,\n            }\n          })\n          resultsArray.sort((a, b) => {\n            return a.drivingtime - b.drivingtime\n          })\n          const sortedLocations = resultsArray.map((result) => {\n            return result.location\n          })\n          resolve(sortedLocations)\n        })\n      })\n    }\n\n    const recalculateRoutes = () => {\n      sortDestinations(destinations).then((sorted) => {\n        sorted.unshift(origin)\n\n        ttapi.services\n          .calculateRoute({\n            key:\"RKqZoufGP8qNritQfUA4AZDr3lM7GTCR\",\n            locations: sorted,\n          })\n          .then((routeData) => {\n            const geoJson = routeData.toGeoJson()\n            drawRoute(geoJson, map)\n        })\n      })\n    }\n\n\n    map.on('click', (e) => {\n      destinations.push(e.lngLat)\n      addDeliveryMarker(e.lngLat, map)\n      recalculateRoutes()\n    })\n\n    return () => map.remove()\n  }, [longitude, latitude])\n\n  return (\n    <>\n      {map && (\n        <div className=\"app\">\n          <div ref={mapElement} className=\"map\" />\n          <div className=\"search-bar\">\n            <h1>Where to?</h1>\n            <input\n              type=\"text\"\n              id=\"longitude\"\n              className=\"longitude\"\n              placeholder=\"Put in Longitude\"\n              onChange={(e) => {\n                setLongitude(e.target.value)\n              }}\n            />\n            <input\n              type=\"text\"\n              id=\"latitude\"\n              className=\"latitude\"\n              placeholder=\"Put in latitude\"\n             \n            />\n          </div>\n        </div>\n      )}\n    </>\n  )\n}\n\nexport default App\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}